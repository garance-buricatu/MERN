[{"/home/garance/Documents/MERN/DevConnecter/client/src/index.js":"1","/home/garance/Documents/MERN/DevConnecter/client/src/App.js":"2","/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Landing.js":"3","/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Navbar.js":"4","/home/garance/Documents/MERN/DevConnecter/client/src/components/auth/Login.js":"5","/home/garance/Documents/MERN/DevConnecter/client/src/components/auth/Register.js":"6","/home/garance/Documents/MERN/DevConnecter/client/src/store.js":"7","/home/garance/Documents/MERN/DevConnecter/client/src/reducers/index.js":"8","/home/garance/Documents/MERN/DevConnecter/client/src/reducers/alert.js":"9","/home/garance/Documents/MERN/DevConnecter/client/src/actions/types.js":"10","/home/garance/Documents/MERN/DevConnecter/client/src/actions/alert.js":"11","/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Alert.js":"12","/home/garance/Documents/MERN/DevConnecter/client/src/actions/auth.js":"13","/home/garance/Documents/MERN/DevConnecter/client/src/reducers/auth.js":"14","/home/garance/Documents/MERN/DevConnecter/client/src/utils/setAuthToken.js":"15"},{"size":155,"mtime":1609110716784,"results":"16","hashOfConfig":"17"},{"size":1211,"mtime":1609282856636,"results":"18","hashOfConfig":"17"},{"size":807,"mtime":1609112990213,"results":"19","hashOfConfig":"17"},{"size":1344,"mtime":1609282017500,"results":"20","hashOfConfig":"17"},{"size":2402,"mtime":1609280713705,"results":"21","hashOfConfig":"17"},{"size":3935,"mtime":1609280704180,"results":"22","hashOfConfig":"17"},{"size":374,"mtime":1609126107816,"results":"23","hashOfConfig":"17"},{"size":155,"mtime":1609192849368,"results":"24","hashOfConfig":"17"},{"size":644,"mtime":1609127566377,"results":"25","hashOfConfig":"17"},{"size":401,"mtime":1609280899485,"results":"26","hashOfConfig":"17"},{"size":546,"mtime":1609191018801,"results":"27","hashOfConfig":"17"},{"size":497,"mtime":1609189595250,"results":"28","hashOfConfig":"17"},{"size":2747,"mtime":1609280962786,"results":"29","hashOfConfig":"17"},{"size":1404,"mtime":1609280974687,"results":"30","hashOfConfig":"17"},{"size":419,"mtime":1609274300767,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ezztea",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/garance/Documents/MERN/DevConnecter/client/src/index.js",[],["66","67"],"/home/garance/Documents/MERN/DevConnecter/client/src/App.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Landing.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Navbar.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/auth/Login.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/auth/Register.js",["68"],"import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n\n// redux\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\n\n// import axios from 'axios';\n\nexport const Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email:'',\n        password:'',\n        password2:''\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    // e.target.name and e.target.value gets the specific name and value of the given field (input)\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value }); //spread operator copies contanets of formData and changes \"name\" attribute only\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if (password !== password2){\n            // call action when passwords do not match --> send message and alert type --> see actions/alert.js\n            setAlert('Passwords do not match', 'danger');\n        }\n        else {\n\n           // call register action\n           register({\n               name, // pulled from formData\n               email,\n               password\n           });\n            \n            console.log('SUCCESS!');\n        }\n    };\n\n    // Redirect if logged in\n    if (isAuthenticated){\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i class=\"fas fa-user\"></i> Create Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Name\" \n                    name=\"name\" \n                    value={name} \n                    onChange = {e => onChange(e)} \n                    />\n                </div>\n                <div className=\"form-group\">\n                <input \n                    type=\"email\" \n                    placeholder=\"Email Address\" \n                    name=\"email\"\n                    value={email}\n                    onChange = {e => onChange(e)}\n                    />\n                <small className=\"form-text\"\n                    >This site uses Gravatar so if you want a profile image, use a\n                    Gravatar email</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password} \n                    onChange = {e => onChange(e)} \n                />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    value={password2} \n                    onChange = {e => onChange(e)} \n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated // get auth state ie. { token, isAuthenticated, loading, user }\n});\n\n{/* need to add the setAlert action here to make it avaliable within \"props\" parameter above, wchih has been destructured*/}\nexport default connect(\n    mapStateToProps, \n    { setAlert, register } \n)(Register);\n","/home/garance/Documents/MERN/DevConnecter/client/src/store.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/reducers/index.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/reducers/alert.js",["69"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    // action is an object that has both type and payload attached to it\n    const { type, payload } = action;\n    \n    switch(type) { // depending on type, decide what state to send down\n        case SET_ALERT: \n            return [...state, payload]; // state getting passed down to the component\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload); // returns all alerts except the one that matches the payload\n        default:\n            return state;\n    }\n}","/home/garance/Documents/MERN/DevConnecter/client/src/actions/types.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/actions/alert.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Alert.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/actions/auth.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/reducers/auth.js",["70"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = { //deafult values\n    token: localStorage.getItem('token'), // fetching token friom local storage if it exists\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch(type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token); // put token that is returned inside local storage\n            return {\n                ...state, \n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token'); //never want to have a token in local storage that is not valid\n            return {\n                ...state, \n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","/home/garance/Documents/MERN/DevConnecter/client/src/utils/setAuthToken.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":113,"column":1,"nodeType":"77","messageId":"78","endLine":113,"endColumn":125},{"ruleId":"79","severity":1,"message":"80","line":4,"column":1,"nodeType":"81","endLine":16,"endColumn":2},{"ruleId":"79","severity":1,"message":"80","line":18,"column":1,"nodeType":"81","endLine":51,"endColumn":2},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]