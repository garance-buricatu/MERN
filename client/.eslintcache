[{"/home/garance/Documents/MERN/DevConnecter/client/src/index.js":"1","/home/garance/Documents/MERN/DevConnecter/client/src/App.js":"2","/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Landing.js":"3","/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Navbar.js":"4","/home/garance/Documents/MERN/DevConnecter/client/src/components/auth/Login.js":"5","/home/garance/Documents/MERN/DevConnecter/client/src/components/auth/Register.js":"6","/home/garance/Documents/MERN/DevConnecter/client/src/store.js":"7","/home/garance/Documents/MERN/DevConnecter/client/src/reducers/index.js":"8","/home/garance/Documents/MERN/DevConnecter/client/src/reducers/alert.js":"9","/home/garance/Documents/MERN/DevConnecter/client/src/actions/types.js":"10","/home/garance/Documents/MERN/DevConnecter/client/src/actions/alert.js":"11","/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Alert.js":"12","/home/garance/Documents/MERN/DevConnecter/client/src/actions/auth.js":"13","/home/garance/Documents/MERN/DevConnecter/client/src/reducers/auth.js":"14"},{"size":155,"mtime":1609110716784,"results":"15","hashOfConfig":"16"},{"size":895,"mtime":1609189573778,"results":"17","hashOfConfig":"16"},{"size":807,"mtime":1609112990213,"results":"18","hashOfConfig":"16"},{"size":585,"mtime":1609112908244,"results":"19","hashOfConfig":"16"},{"size":1824,"mtime":1609114922433,"results":"20","hashOfConfig":"16"},{"size":3599,"mtime":1609192552374,"results":"21","hashOfConfig":"16"},{"size":374,"mtime":1609126107816,"results":"22","hashOfConfig":"16"},{"size":155,"mtime":1609192849368,"results":"23","hashOfConfig":"16"},{"size":644,"mtime":1609127566377,"results":"24","hashOfConfig":"16"},{"size":201,"mtime":1609191247886,"results":"25","hashOfConfig":"16"},{"size":546,"mtime":1609191018801,"results":"26","hashOfConfig":"16"},{"size":497,"mtime":1609189595250,"results":"27","hashOfConfig":"16"},{"size":904,"mtime":1609192260572,"results":"28","hashOfConfig":"16"},{"size":973,"mtime":1609192959134,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ezztea",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"/home/garance/Documents/MERN/DevConnecter/client/src/index.js",[],["63","64"],"/home/garance/Documents/MERN/DevConnecter/client/src/App.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Landing.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Navbar.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/auth/Login.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/auth/Register.js",["65"],"import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n\n// redux\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\n\n// import axios from 'axios';\n\nexport const Register = ({ setAlert, register }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email:'',\n        password:'',\n        password2:''\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    // e.target.name and e.target.value gets the specific name and value of the given field (input)\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value }); //spread operator copies contanets of formData and changes \"name\" attribute only\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if (password !== password2){\n            // call action when passwords do not match --> send message and alert type --> see actions/alert.js\n            setAlert('Passwords do not match', 'danger');\n        }\n        else {\n\n           // call register action\n           register({\n               name, // pulled from formData\n               email,\n               password\n           });\n            \n            console.log('SUCCESS!');\n        }\n    }\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i class=\"fas fa-user\"></i> Create Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Name\" \n                    name=\"name\" \n                    value={name} \n                    onChange = {e => onChange(e)} \n                    />\n                </div>\n                <div className=\"form-group\">\n                <input \n                    type=\"email\" \n                    placeholder=\"Email Address\" \n                    name=\"email\"\n                    value={email}\n                    onChange = {e => onChange(e)}\n                    />\n                <small className=\"form-text\"\n                    >This site uses Gravatar so if you want a profile image, use a\n                    Gravatar email</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password} \n                    onChange = {e => onChange(e)} \n                />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    value={password2} \n                    onChange = {e => onChange(e)} \n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired\n}\n\n{/* need to add the setAlert action here to make it avaliable within \"props\" parameter above, wchih has been destructured*/}\nexport default connect(\n    null, \n    { setAlert, register } \n)(Register);\n","/home/garance/Documents/MERN/DevConnecter/client/src/store.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/reducers/index.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/reducers/alert.js",["66"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    // action is an object that has both type and payload attached to it\n    const { type, payload } = action;\n    \n    switch(type) { // depending on type, decide what state to send down\n        case SET_ALERT: \n            return [...state, payload]; // state getting passed down to the component\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload); // returns all alerts except the one that matches the payload\n        default:\n            return state;\n    }\n}",["67","68"],"/home/garance/Documents/MERN/DevConnecter/client/src/actions/types.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/actions/alert.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/components/layout/Alert.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/actions/auth.js",[],"/home/garance/Documents/MERN/DevConnecter/client/src/reducers/auth.js",["69"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from '../actions/types';\n\nconst initialState = { //deafult values\n    token: localStorage.getItem('token'), // fetching token friom local storage if it exists\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch(type) {\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', payload.token); // put token that is returned inside local storage\n            return {\n                ...state, \n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return {\n                ...state, \n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":102,"column":1,"nodeType":"76","messageId":"77","endLine":102,"endColumn":125},{"ruleId":"78","severity":1,"message":"79","line":4,"column":1,"nodeType":"80","endLine":16,"endColumn":2},{"ruleId":"70","replacedBy":"81"},{"ruleId":"72","replacedBy":"82"},{"ruleId":"78","severity":1,"message":"79","line":13,"column":1,"nodeType":"80","endLine":35,"endColumn":2},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["83"],["84"],"no-global-assign","no-unsafe-negation"]